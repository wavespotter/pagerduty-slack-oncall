---
AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"

Parameters:
  SSMKeyArn:
    Type: String
  PDSSMKeyName:
    Type: String
    Default: "pd-oncall-chat-topic"
  SlackSSMKeyName:
    Type: String
    Default: "pd-oncall-chat-topic-slack"
  Bucket:
    Type: String
  md5:
    Type: String

Outputs:
  ConfigTableName:
    Description: "Name of Config Table"
    Value: !Ref ConfigTable
  ConfigTableArn:
    Description: "Arn of Config Table"
    Value: !GetAtt ConfigTable.Arn

Resources:
  ChatTopicRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Sid: "Lambda"
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/cfn/"
      Policies:
        - PolicyName: SSM
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameters
                Resource:
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${PDSSMKeyName}"
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${SlackSSMKeyName}"
        - PolicyName: KMS
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - kms:Decrypt
                Resource:
                  - !Ref SSMKeyArn
        - PolicyName: DDB
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:scan
                Resource:
                  - !GetAtt ConfigTable.Arn

  ConfigTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      Tags:
        - Key: "env"
          Value: "production"
        - Key: "service"
          Value: "pagerduty-slack-oncall"
        - Key: "version"
          Value: !Ref md5
        - Key: "sofar:team"
          Value: "platform"
        - Key: "sofar:cost-category"
          Value: "opex"
      AttributeDefinitions:
        - AttributeName: "schedule"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "schedule"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TimeToLiveSpecification:
        AttributeName: expiretime
        Enabled: true

  ChatTopicFunction:
    Type: AWS::Serverless::Function
    Properties:
      Tags:
        env: "production"
        service: "pagerduty-slack-oncall"
        version: !Ref md5
        sofar:team: "platform"
        sofar:cost-category: "opex"
      Handler: main.handler
      Runtime: python3.8
      Timeout: 120
      CodeUri:
        Bucket: !Ref Bucket
        Key: !Ref md5
      Layers:
        - arn:aws:lambda:us-east-2:259788987135:layer:AWSLambda-Python-AWS-SDK:4 # for us-east-2 region
      Environment:
        Variables:
          PD_API_KEY_NAME: !Ref PDSSMKeyName
          SLACK_API_KEY_NAME: !Ref SlackSSMKeyName
          CONFIG_TABLE: !Ref ConfigTable
      Role: !GetAtt ChatTopicRole.Arn
      Events:
        Cron:
          Type: Schedule
          Properties:
            Schedule: "rate(5 minutes)"
